---
swagger: '2.0'
info:
  title: API V1
  version: v1
paths:
  "/players":
    parameters:
    - name: Accept-Language
      in: header
      type: string
      required: false
    post:
      summary: Creates a new Player
      tags:
      - Player
      produces:
      - application/json
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          "$ref": "#/definitions/player_edit"
      responses:
        '200':
          description: A new player is created
          schema:
            type: object
            properties:
              data:
                "$ref": "#/definitions/player"
              status:
                type: string
                x-nullable: true
        '400':
          description: Bad request
          schema:
            type: object
            properties:
              data:
                type: object
                x-nullable: true
              status:
                type: string
  "/players/{id}":
    parameters:
    - name: Accept-Language
      in: header
      type: string
      required: false
    - name: id
      in: path
      type: integer
      required: true
      description: ID of the player
    get:
      summary: Shows details for a player
      tags:
      - Player
      produces:
      - application/json
      security:
      - Bearer: []
      responses:
        '200':
          description: Returns details for player
          schema:
            type: object
            properties:
              data:
                "$ref": "#/definitions/player"
              status:
                type: string
                x-nullable: true
        '404':
          description: Not Found
          schema:
            type: object
            properties:
              data:
                type: object
                x-nullable: true
              status:
                type: string
    put:
      summary: Updates details for a player
      tags:
      - Player
      consumes:
      - application/json
      produces:
      - application/json
      security:
      - Bearer: []
      parameters:
      - name: params
        in: body
        schema:
          "$ref": "#/definitions/player_edit"
      responses:
        '200':
          description: Returns details for player
          schema:
            type: object
            properties:
              data:
                "$ref": "#/definitions/player"
              status:
                type: string
                x-nullable: true
  "/players/follow":
    post:
      summary: Follow player identified by the id
      tags:
      - Player
      produces:
      - application/json
      consumes:
      - application/json
      security:
      - Bearer: []
      parameters:
      - name: Accept-Language
        in: header
        type: string
        required: false
      - name: params
        in: body
        schema:
          type: object
          properties:
            player_to_follow_id:
              type: integer
              description: ID of the player to follow
          required:
          - player_to_follow_id
      responses:
        '200':
          description: Adds current user to the player identified by ID's followers
          schema:
            type: object
            properties:
              data:
                type: object
                x-nullable: true
              status:
                type: string
                x-nullable: true
  "/players/{id}/followers":
    parameters:
    - name: Accept-Language
      in: header
      type: string
      required: false
    get:
      summary: Returns a list of followers for the player identified by id
      tags:
      - Player
      produces:
      - application/json
      security:
      - Bearer: []
      parameters:
      - name: id
        in: path
        type: integer
        required: true
        description: ID of the player
      - name: offset
        in: query
        type: integer
        required: false
        description: Optional offset for paging. Defaults to 0
      - name: limit
        in: query
        type: integer
        required: false
        description: Optional page size. Defaults to 20
      responses:
        '200':
          description: Returns a list of people following this Player
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  "$ref": "#/definitions/player_basic"
              status:
                type: string
                x-nullable: true
          examples:
            Returns a list of followers:
              status: 
              data:
              - id: 237
                firstname: Fernando
                lastname: Lastname4
              - id: 236
                firstname: Jane
                lastname: Doe
              - id: 235
                firstname: John
                lastname: Smith
              - id: 239
                firstname: Steven
                lastname: Lastname6
              - id: 238
                firstname: Virgil
                lastname: Lastname5
        '401':
          description: Not Authorized
          schema:
            type: object
            properties:
              data:
                type: object
                x-nullable: true
              status:
                type: string
        '404':
          description: Not Found
          schema:
            type: object
            properties:
              data:
                type: object
                x-nullable: true
              status:
                type: string
  "/players/logout":
    parameters:
    - name: Accept-Language
      in: header
      type: string
      required: false
    delete:
      summary: Logs out the current user. The access token is invalidated.
      tags:
      - Login
      security:
      - Bearer: []
      responses:
        '200':
          description: User is now logged out (JWT is revoked)
  "/players/login":
    parameters:
    - name: Accept-Language
      in: header
      type: string
      required: false
    post:
      summary: Verifies credentials and returns access token
      tags:
      - Login
      consumes:
      - application/json
      parameters:
      - name: params
        in: body
        schema:
          type: object
          properties:
            email:
              type: string
            password:
              type: string
          required:
          - email
          - password
      responses:
        '200':
          description: Login successful
          schema:
            type: object
            properties:
              status:
                type: string
                x-nullable: true
              data:
                type: object
                properties:
                  token:
                    type: string
definitions:
  player_basic:
    type: object
    properties:
      id:
        type: integer
        readOnly: true
      firstname:
        type: string
      lastname:
        type: string
  player:
    allOf:
    - "$ref": "#/definitions/player_basic"
    - type: object
      properties:
        email:
          type: string
        position:
          type: string
          x-nullable: true
        club:
          type: string
          x-nullable: true
        date_of_birth:
          type: string
          x-nullable: true
          description: ISO-8601 timestamp
  player_edit:
    allOf:
    - "$ref": "#/definitions/player"
    - type: object
      properties:
        password:
          type: string
        password_confirmation:
          type: string
securityDefinitions:
  Bearer:
    description: 'API token. Value should be informat: ''Bearer [token]'''
    type: apiKey
    name: Authorization
    in: header
